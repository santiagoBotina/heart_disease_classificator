services:
  source_db:
    restart: always
    image: postgres:14
    container_name: datasource_db
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5434:5434"
    volumes:
      - ./data/heart_disease_classificator:/var/lib/postgresql/data
    command: -p ${DB_PORT}

  mlflow_db:
    restart: always
    image: postgres:14
    environment:
      POSTGRES_USER: ${MLFLOW_DB_USER}
      POSTGRES_PASSWORD: ${MLFLOW_DB_PASS}
      POSTGRES_DB: ${MLFLOW_DB_NAME}
    ports:
      - "5435:5435"
    volumes:
      - ./data/mlflow:/var/lib/postgresql/data
    command: -p ${MLFLOW_DB_PORT}
    healthcheck:
      test: [ "CMD", "pg_isready", "-p", "${MLFLOW_DB_PORT}", "-U", "${MLFLOW_DB_USER}" ]
      interval: 5s
      timeout: 5s
      retries: 3

  s3:
    restart: always
    image: minio/minio
    container_name: mlflow_minio
    volumes:
      - ./data/minio_data:/data
    ports:
      - "${MINIO_PORT}:9000"
      - "${MINIO_CONSOLE_PORT}:9001"
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
      - MINIO_ADDRESS=${MINIO_ADDRESS}
      - MINIO_PORT=${MINIO_PORT}
      - MINIO_STORAGE_USE_HTTPS=${MINIO_STORAGE_USE_HTTPS}
      - MINIO_CONSOLE_ADDRESS=${MINIO_CONSOLE_ADDRESS}
    command: server /data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  mlflow:
    restart: always
    build: ./mlflow
    image: mlflow_server
    container_name: mlflow_server
    depends_on:
      - mlflow_db
    ports:
      - "${MLFLOW_PORT}:5000"
    environment:
      - AWS_ACCESS_KEY_ID=${MINIO_ACCESS_KEY}
      - AWS_SECRET_ACCESS_KEY=${MINIO_SECRET_ACCESS_KEY}
      - MLFLOW_S3_ENDPOINT_URL=http://s3:${MINIO_PORT}
      - MLFLOW_S3_IGNORE_TLS=true
    command: >
      mlflow server
      --backend-store-uri postgresql://${MLFLOW_DB_USER}:${MLFLOW_DB_PASS}@mlflow_db:${MLFLOW_DB_PORT}/${MLFLOW_DB_NAME}
      --host 0.0.0.0
      --serve-artifacts
      --artifacts-destination s3://${MLFLOW_BUCKET_NAME}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${MLFLOW_PORT}/"]
      interval: 30s
      timeout: 10s
      retries: 3